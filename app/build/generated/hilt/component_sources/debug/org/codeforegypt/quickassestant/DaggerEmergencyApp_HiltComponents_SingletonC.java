// Generated by Dagger (https://dagger.dev).
package org.codeforegypt.quickassestant;

import android.app.Activity;
import android.app.Service;
import android.view.View;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.SavedStateHandle;
import androidx.lifecycle.ViewModel;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import dagger.hilt.android.ActivityRetainedLifecycle;
import dagger.hilt.android.ViewModelLifecycle;
import dagger.hilt.android.internal.builders.ActivityComponentBuilder;
import dagger.hilt.android.internal.builders.ActivityRetainedComponentBuilder;
import dagger.hilt.android.internal.builders.FragmentComponentBuilder;
import dagger.hilt.android.internal.builders.ServiceComponentBuilder;
import dagger.hilt.android.internal.builders.ViewComponentBuilder;
import dagger.hilt.android.internal.builders.ViewModelComponentBuilder;
import dagger.hilt.android.internal.builders.ViewWithFragmentComponentBuilder;
import dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories;
import dagger.hilt.android.internal.lifecycle.DefaultViewModelFactories_InternalFactoryFactory_Factory;
import dagger.hilt.android.internal.managers.ActivityRetainedComponentManager_LifecycleModule_ProvideActivityRetainedLifecycleFactory;
import dagger.hilt.android.internal.managers.SavedStateHandleHolder;
import dagger.hilt.android.internal.modules.ApplicationContextModule;
import dagger.hilt.android.internal.modules.ApplicationContextModule_ProvideContextFactory;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.IdentifierNameString;
import dagger.internal.KeepFieldType;
import dagger.internal.LazyClassKeyMap;
import dagger.internal.Preconditions;
import dagger.internal.Provider;
import java.util.Map;
import java.util.Set;
import okhttp3.OkHttpClient;
import okhttp3.logging.HttpLoggingInterceptor;
import org.codeforegypt.quickassestant.api.ArticlesApi;
import org.codeforegypt.quickassestant.api.ContactsApi;
import org.codeforegypt.quickassestant.api.EmergencyApi;
import org.codeforegypt.quickassestant.api.ProfileApi;
import org.codeforegypt.quickassestant.api.SimpleApi;
import org.codeforegypt.quickassestant.data.db.ArticleDao;
import org.codeforegypt.quickassestant.data.db.ContactDao;
import org.codeforegypt.quickassestant.data.db.UserDao;
import org.codeforegypt.quickassestant.data.db.UserDatabase;
import org.codeforegypt.quickassestant.di.AppModule_ProvideAuthRepositoryFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideDaoFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideLoggingInterceptorFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideOkHttpFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideRetrofitInstanceFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideSimpleApiFactory;
import org.codeforegypt.quickassestant.di.AppModule_ProvideUserDatabaseFactory;
import org.codeforegypt.quickassestant.di.ArticleModule_ProvideArticleApiFactory;
import org.codeforegypt.quickassestant.di.ArticleModule_ProvideArticleDaoFactory;
import org.codeforegypt.quickassestant.di.ArticleModule_ProvideArticleRepoFactory;
import org.codeforegypt.quickassestant.di.ContactModule_ProvideArticleApiFactory;
import org.codeforegypt.quickassestant.di.ContactModule_ProvideContactDaoFactory;
import org.codeforegypt.quickassestant.di.ContactModule_ProvideContactsRepositoryFactory;
import org.codeforegypt.quickassestant.di.EmergencyModule_ProvideEmergencyApiFactory;
import org.codeforegypt.quickassestant.di.EmergencyModule_ProvideRepoEmergencyFactory;
import org.codeforegypt.quickassestant.di.ProfileModule_ProvideProfileApiFactory;
import org.codeforegypt.quickassestant.di.ProfileModule_ProvideProfileRepoFactory;
import org.codeforegypt.quickassestant.domain.repository.IArticleRepo;
import org.codeforegypt.quickassestant.domain.repository.IAuthRepository;
import org.codeforegypt.quickassestant.domain.repository.IContactRepo;
import org.codeforegypt.quickassestant.domain.repository.IEmergencyRepo;
import org.codeforegypt.quickassestant.domain.repository.IProfileRepo;
import org.codeforegypt.quickassestant.ui.MainActivity;
import org.codeforegypt.quickassestant.ui.fragments.ChangePasswordFragment;
import org.codeforegypt.quickassestant.ui.fragments.MainFragment;
import org.codeforegypt.quickassestant.ui.fragments.article.ArticleFragment;
import org.codeforegypt.quickassestant.ui.fragments.article.list.ArticleViewModel;
import org.codeforegypt.quickassestant.ui.fragments.article.list.ArticleViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.article.list.ArticlesFragment;
import org.codeforegypt.quickassestant.ui.fragments.auth.LogInFragment;
import org.codeforegypt.quickassestant.ui.fragments.auth.LogInViewModel;
import org.codeforegypt.quickassestant.ui.fragments.auth.LogInViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.auth.SignUpFragment;
import org.codeforegypt.quickassestant.ui.fragments.auth.SignUpViewModel;
import org.codeforegypt.quickassestant.ui.fragments.auth.SignUpViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordFragment;
import org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordViewModel;
import org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactFragment;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactViewModel;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsFragment;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsViewModel;
import org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.add.AddEmergencyViewModel;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.add.AddEmergencyViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.add.PublishReportFragment;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyFragment;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyViewModule;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyViewModule_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyFragment;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyViewModel;
import org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.more.MoreFragment;
import org.codeforegypt.quickassestant.ui.fragments.more.MoreViewModel;
import org.codeforegypt.quickassestant.ui.fragments.more.MoreViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileFragment;
import org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileViewModel;
import org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileFragment;
import org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileViewModel;
import org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileViewModel_HiltModules;
import org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashFragment;
import org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashViewModel;
import org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashViewModel_HiltModules;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class DaggerEmergencyApp_HiltComponents_SingletonC {
  private DaggerEmergencyApp_HiltComponents_SingletonC() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private ApplicationContextModule applicationContextModule;

    private Builder() {
    }

    public Builder applicationContextModule(ApplicationContextModule applicationContextModule) {
      this.applicationContextModule = Preconditions.checkNotNull(applicationContextModule);
      return this;
    }

    public EmergencyApp_HiltComponents.SingletonC build() {
      Preconditions.checkBuilderRequirement(applicationContextModule, ApplicationContextModule.class);
      return new SingletonCImpl(applicationContextModule);
    }
  }

  private static final class ActivityRetainedCBuilder implements EmergencyApp_HiltComponents.ActivityRetainedC.Builder {
    private final SingletonCImpl singletonCImpl;

    private SavedStateHandleHolder savedStateHandleHolder;

    private ActivityRetainedCBuilder(SingletonCImpl singletonCImpl) {
      this.singletonCImpl = singletonCImpl;
    }

    @Override
    public ActivityRetainedCBuilder savedStateHandleHolder(
        SavedStateHandleHolder savedStateHandleHolder) {
      this.savedStateHandleHolder = Preconditions.checkNotNull(savedStateHandleHolder);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ActivityRetainedC build() {
      Preconditions.checkBuilderRequirement(savedStateHandleHolder, SavedStateHandleHolder.class);
      return new ActivityRetainedCImpl(singletonCImpl, savedStateHandleHolder);
    }
  }

  private static final class ActivityCBuilder implements EmergencyApp_HiltComponents.ActivityC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private Activity activity;

    private ActivityCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
    }

    @Override
    public ActivityCBuilder activity(Activity activity) {
      this.activity = Preconditions.checkNotNull(activity);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ActivityC build() {
      Preconditions.checkBuilderRequirement(activity, Activity.class);
      return new ActivityCImpl(singletonCImpl, activityRetainedCImpl, activity);
    }
  }

  private static final class FragmentCBuilder implements EmergencyApp_HiltComponents.FragmentC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private Fragment fragment;

    private FragmentCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
    }

    @Override
    public FragmentCBuilder fragment(Fragment fragment) {
      this.fragment = Preconditions.checkNotNull(fragment);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.FragmentC build() {
      Preconditions.checkBuilderRequirement(fragment, Fragment.class);
      return new FragmentCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, fragment);
    }
  }

  private static final class ViewWithFragmentCBuilder implements EmergencyApp_HiltComponents.ViewWithFragmentC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl;

    private View view;

    private ViewWithFragmentCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        FragmentCImpl fragmentCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
      this.fragmentCImpl = fragmentCImpl;
    }

    @Override
    public ViewWithFragmentCBuilder view(View view) {
      this.view = Preconditions.checkNotNull(view);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ViewWithFragmentC build() {
      Preconditions.checkBuilderRequirement(view, View.class);
      return new ViewWithFragmentCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, fragmentCImpl, view);
    }
  }

  private static final class ViewCBuilder implements EmergencyApp_HiltComponents.ViewC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private View view;

    private ViewCBuilder(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
        ActivityCImpl activityCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
    }

    @Override
    public ViewCBuilder view(View view) {
      this.view = Preconditions.checkNotNull(view);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ViewC build() {
      Preconditions.checkBuilderRequirement(view, View.class);
      return new ViewCImpl(singletonCImpl, activityRetainedCImpl, activityCImpl, view);
    }
  }

  private static final class ViewModelCBuilder implements EmergencyApp_HiltComponents.ViewModelC.Builder {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private SavedStateHandle savedStateHandle;

    private ViewModelLifecycle viewModelLifecycle;

    private ViewModelCBuilder(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
    }

    @Override
    public ViewModelCBuilder savedStateHandle(SavedStateHandle handle) {
      this.savedStateHandle = Preconditions.checkNotNull(handle);
      return this;
    }

    @Override
    public ViewModelCBuilder viewModelLifecycle(ViewModelLifecycle viewModelLifecycle) {
      this.viewModelLifecycle = Preconditions.checkNotNull(viewModelLifecycle);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ViewModelC build() {
      Preconditions.checkBuilderRequirement(savedStateHandle, SavedStateHandle.class);
      Preconditions.checkBuilderRequirement(viewModelLifecycle, ViewModelLifecycle.class);
      return new ViewModelCImpl(singletonCImpl, activityRetainedCImpl, savedStateHandle, viewModelLifecycle);
    }
  }

  private static final class ServiceCBuilder implements EmergencyApp_HiltComponents.ServiceC.Builder {
    private final SingletonCImpl singletonCImpl;

    private Service service;

    private ServiceCBuilder(SingletonCImpl singletonCImpl) {
      this.singletonCImpl = singletonCImpl;
    }

    @Override
    public ServiceCBuilder service(Service service) {
      this.service = Preconditions.checkNotNull(service);
      return this;
    }

    @Override
    public EmergencyApp_HiltComponents.ServiceC build() {
      Preconditions.checkBuilderRequirement(service, Service.class);
      return new ServiceCImpl(singletonCImpl, service);
    }
  }

  private static final class ViewWithFragmentCImpl extends EmergencyApp_HiltComponents.ViewWithFragmentC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl;

    private final ViewWithFragmentCImpl viewWithFragmentCImpl = this;

    private ViewWithFragmentCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        FragmentCImpl fragmentCImpl, View viewParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;
      this.fragmentCImpl = fragmentCImpl;


    }
  }

  private static final class FragmentCImpl extends EmergencyApp_HiltComponents.FragmentC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final FragmentCImpl fragmentCImpl = this;

    private FragmentCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, ActivityCImpl activityCImpl,
        Fragment fragmentParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;


    }

    @Override
    public DefaultViewModelFactories.InternalFactoryFactory getHiltInternalFactoryFactory() {
      return activityCImpl.getHiltInternalFactoryFactory();
    }

    @Override
    public ViewWithFragmentComponentBuilder viewWithFragmentComponentBuilder() {
      return new ViewWithFragmentCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl, fragmentCImpl);
    }

    @Override
    public void injectChangePasswordFragment(ChangePasswordFragment changePasswordFragment) {
    }

    @Override
    public void injectMainFragment(MainFragment mainFragment) {
    }

    @Override
    public void injectArticleFragment(ArticleFragment articleFragment) {
    }

    @Override
    public void injectArticlesFragment(ArticlesFragment articlesFragment) {
    }

    @Override
    public void injectLogInFragment(LogInFragment logInFragment) {
    }

    @Override
    public void injectSignUpFragment(SignUpFragment signUpFragment) {
    }

    @Override
    public void injectForgotPasswordFragment(ForgotPasswordFragment forgotPasswordFragment) {
    }

    @Override
    public void injectContactFragment(ContactFragment contactFragment) {
    }

    @Override
    public void injectContactsFragment(ContactsFragment contactsFragment) {
    }

    @Override
    public void injectPublishReportFragment(PublishReportFragment publishReportFragment) {
    }

    @Override
    public void injectEmergencyFragment(EmergencyFragment emergencyFragment) {
    }

    @Override
    public void injectMyEmergencyFragment(MyEmergencyFragment myEmergencyFragment) {
    }

    @Override
    public void injectMoreFragment(MoreFragment moreFragment) {
    }

    @Override
    public void injectEditProfileFragment(EditProfileFragment editProfileFragment) {
    }

    @Override
    public void injectUserProfileFragment(UserProfileFragment userProfileFragment) {
    }

    @Override
    public void injectFirstSplashFragment(FirstSplashFragment firstSplashFragment) {
    }
  }

  private static final class ViewCImpl extends EmergencyApp_HiltComponents.ViewC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl;

    private final ViewCImpl viewCImpl = this;

    private ViewCImpl(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
        ActivityCImpl activityCImpl, View viewParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;
      this.activityCImpl = activityCImpl;


    }
  }

  private static final class ActivityCImpl extends EmergencyApp_HiltComponents.ActivityC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ActivityCImpl activityCImpl = this;

    private ActivityCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, Activity activityParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;


    }

    @Override
    public DefaultViewModelFactories.InternalFactoryFactory getHiltInternalFactoryFactory() {
      return DefaultViewModelFactories_InternalFactoryFactory_Factory.newInstance(getViewModelKeys(), new ViewModelCBuilder(singletonCImpl, activityRetainedCImpl));
    }

    @Override
    public Map<Class<?>, Boolean> getViewModelKeys() {
      return LazyClassKeyMap.<Boolean>of(ImmutableMap.<String, Boolean>builderWithExpectedSize(13).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel, AddEmergencyViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel, ArticleViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel, ContactViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel, ContactsViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel, EditProfileViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule, EmergencyViewModule_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel, FirstSplashViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel, ForgotPasswordViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel, LogInViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel, MoreViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel, MyEmergencyViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel, SignUpViewModel_HiltModules.KeyModule.provide()).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel, UserProfileViewModel_HiltModules.KeyModule.provide()).build());
    }

    @Override
    public ViewModelComponentBuilder getViewModelComponentBuilder() {
      return new ViewModelCBuilder(singletonCImpl, activityRetainedCImpl);
    }

    @Override
    public FragmentComponentBuilder fragmentComponentBuilder() {
      return new FragmentCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl);
    }

    @Override
    public ViewComponentBuilder viewComponentBuilder() {
      return new ViewCBuilder(singletonCImpl, activityRetainedCImpl, activityCImpl);
    }

    @Override
    public void injectMainActivity(MainActivity mainActivity) {
    }

    @IdentifierNameString
    private static final class LazyClassKeyProvider {
      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel = "org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyViewModel";

      static String org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel = "org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel = "org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel = "org.codeforegypt.quickassestant.ui.fragments.contacts.ContactViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.SignUpViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.LogInViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel = "org.codeforegypt.quickassestant.ui.fragments.emergencies.add.AddEmergencyViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel = "org.codeforegypt.quickassestant.ui.fragments.article.list.ArticleViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel = "org.codeforegypt.quickassestant.ui.fragments.more.MoreViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel = "org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule = "org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyViewModule";

      static String org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel = "org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileViewModel";

      @KeepFieldType
      MyEmergencyViewModel org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel2;

      @KeepFieldType
      FirstSplashViewModel org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel2;

      @KeepFieldType
      UserProfileViewModel org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel2;

      @KeepFieldType
      ContactViewModel org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel2;

      @KeepFieldType
      SignUpViewModel org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel2;

      @KeepFieldType
      LogInViewModel org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel2;

      @KeepFieldType
      AddEmergencyViewModel org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel2;

      @KeepFieldType
      ArticleViewModel org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel2;

      @KeepFieldType
      MoreViewModel org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel2;

      @KeepFieldType
      ContactsViewModel org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel2;

      @KeepFieldType
      EmergencyViewModule org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule2;

      @KeepFieldType
      ForgotPasswordViewModel org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel2;

      @KeepFieldType
      EditProfileViewModel org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel2;
    }
  }

  private static final class ViewModelCImpl extends EmergencyApp_HiltComponents.ViewModelC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl;

    private final ViewModelCImpl viewModelCImpl = this;

    private Provider<AddEmergencyViewModel> addEmergencyViewModelProvider;

    private Provider<ArticleViewModel> articleViewModelProvider;

    private Provider<ContactViewModel> contactViewModelProvider;

    private Provider<ContactsViewModel> contactsViewModelProvider;

    private Provider<EditProfileViewModel> editProfileViewModelProvider;

    private Provider<EmergencyViewModule> emergencyViewModuleProvider;

    private Provider<FirstSplashViewModel> firstSplashViewModelProvider;

    private Provider<ForgotPasswordViewModel> forgotPasswordViewModelProvider;

    private Provider<LogInViewModel> logInViewModelProvider;

    private Provider<MoreViewModel> moreViewModelProvider;

    private Provider<MyEmergencyViewModel> myEmergencyViewModelProvider;

    private Provider<SignUpViewModel> signUpViewModelProvider;

    private Provider<UserProfileViewModel> userProfileViewModelProvider;

    private ViewModelCImpl(SingletonCImpl singletonCImpl,
        ActivityRetainedCImpl activityRetainedCImpl, SavedStateHandle savedStateHandleParam,
        ViewModelLifecycle viewModelLifecycleParam) {
      this.singletonCImpl = singletonCImpl;
      this.activityRetainedCImpl = activityRetainedCImpl;

      initialize(savedStateHandleParam, viewModelLifecycleParam);

    }

    @SuppressWarnings("unchecked")
    private void initialize(final SavedStateHandle savedStateHandleParam,
        final ViewModelLifecycle viewModelLifecycleParam) {
      this.addEmergencyViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 0);
      this.articleViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 1);
      this.contactViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 2);
      this.contactsViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 3);
      this.editProfileViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 4);
      this.emergencyViewModuleProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 5);
      this.firstSplashViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 6);
      this.forgotPasswordViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 7);
      this.logInViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 8);
      this.moreViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 9);
      this.myEmergencyViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 10);
      this.signUpViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 11);
      this.userProfileViewModelProvider = new SwitchingProvider<>(singletonCImpl, activityRetainedCImpl, viewModelCImpl, 12);
    }

    @Override
    public Map<Class<?>, javax.inject.Provider<ViewModel>> getHiltViewModelMap() {
      return LazyClassKeyMap.<javax.inject.Provider<ViewModel>>of(ImmutableMap.<String, javax.inject.Provider<ViewModel>>builderWithExpectedSize(13).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel, ((Provider) addEmergencyViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel, ((Provider) articleViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel, ((Provider) contactViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel, ((Provider) contactsViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel, ((Provider) editProfileViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule, ((Provider) emergencyViewModuleProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel, ((Provider) firstSplashViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel, ((Provider) forgotPasswordViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel, ((Provider) logInViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel, ((Provider) moreViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel, ((Provider) myEmergencyViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel, ((Provider) signUpViewModelProvider)).put(LazyClassKeyProvider.org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel, ((Provider) userProfileViewModelProvider)).build());
    }

    @Override
    public Map<Class<?>, Object> getHiltViewModelAssistedMap() {
      return ImmutableMap.<Class<?>, Object>of();
    }

    @IdentifierNameString
    private static final class LazyClassKeyProvider {
      static String org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.LogInViewModel";

      static String org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel = "org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel = "org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel = "org.codeforegypt.quickassestant.ui.fragments.more.MoreViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel = "org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel = "org.codeforegypt.quickassestant.ui.fragments.contacts.ContactViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule = "org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyViewModule";

      static String org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel = "org.codeforegypt.quickassestant.ui.fragments.auth.SignUpViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel = "org.codeforegypt.quickassestant.ui.fragments.emergencies.add.AddEmergencyViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel = "org.codeforegypt.quickassestant.ui.fragments.article.list.ArticleViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel = "org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyViewModel";

      static String org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel = "org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileViewModel";

      @KeepFieldType
      LogInViewModel org_codeforegypt_quickassestant_ui_fragments_auth_LogInViewModel2;

      @KeepFieldType
      FirstSplashViewModel org_codeforegypt_quickassestant_ui_splachFragment_FirstSplashViewModel2;

      @KeepFieldType
      EditProfileViewModel org_codeforegypt_quickassestant_ui_fragments_profile_EditProfileViewModel2;

      @KeepFieldType
      MoreViewModel org_codeforegypt_quickassestant_ui_fragments_more_MoreViewModel2;

      @KeepFieldType
      ContactsViewModel org_codeforegypt_quickassestant_ui_fragments_contacts_ContactsViewModel2;

      @KeepFieldType
      ContactViewModel org_codeforegypt_quickassestant_ui_fragments_contacts_ContactViewModel2;

      @KeepFieldType
      ForgotPasswordViewModel org_codeforegypt_quickassestant_ui_fragments_auth_password_ForgotPasswordViewModel2;

      @KeepFieldType
      EmergencyViewModule org_codeforegypt_quickassestant_ui_fragments_emergencies_emergancy_EmergencyViewModule2;

      @KeepFieldType
      SignUpViewModel org_codeforegypt_quickassestant_ui_fragments_auth_SignUpViewModel2;

      @KeepFieldType
      AddEmergencyViewModel org_codeforegypt_quickassestant_ui_fragments_emergencies_add_AddEmergencyViewModel2;

      @KeepFieldType
      ArticleViewModel org_codeforegypt_quickassestant_ui_fragments_article_list_ArticleViewModel2;

      @KeepFieldType
      MyEmergencyViewModel org_codeforegypt_quickassestant_ui_fragments_emergencies_myemergency_MyEmergencyViewModel2;

      @KeepFieldType
      UserProfileViewModel org_codeforegypt_quickassestant_ui_fragments_profile_UserProfileViewModel2;
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final ActivityRetainedCImpl activityRetainedCImpl;

      private final ViewModelCImpl viewModelCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
          ViewModelCImpl viewModelCImpl, int id) {
        this.singletonCImpl = singletonCImpl;
        this.activityRetainedCImpl = activityRetainedCImpl;
        this.viewModelCImpl = viewModelCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // org.codeforegypt.quickassestant.ui.fragments.emergencies.add.AddEmergencyViewModel 
          return (T) new AddEmergencyViewModel(activityRetainedCImpl.provideRepoEmergencyProvider.get());

          case 1: // org.codeforegypt.quickassestant.ui.fragments.article.list.ArticleViewModel 
          return (T) new ArticleViewModel(activityRetainedCImpl.provideArticleRepoProvider.get());

          case 2: // org.codeforegypt.quickassestant.ui.fragments.contacts.ContactViewModel 
          return (T) new ContactViewModel(activityRetainedCImpl.provideContactsRepositoryProvider.get());

          case 3: // org.codeforegypt.quickassestant.ui.fragments.contacts.ContactsViewModel 
          return (T) new ContactsViewModel(activityRetainedCImpl.provideContactsRepositoryProvider.get());

          case 4: // org.codeforegypt.quickassestant.ui.fragments.profile.EditProfileViewModel 
          return (T) new EditProfileViewModel(activityRetainedCImpl.provideProfileRepoProvider.get());

          case 5: // org.codeforegypt.quickassestant.ui.fragments.emergencies.emergancy.EmergencyViewModule 
          return (T) new EmergencyViewModule(activityRetainedCImpl.provideRepoEmergencyProvider.get());

          case 6: // org.codeforegypt.quickassestant.ui.splachFragment.FirstSplashViewModel 
          return (T) new FirstSplashViewModel(singletonCImpl.provideDaoProvider.get());

          case 7: // org.codeforegypt.quickassestant.ui.fragments.auth.password.ForgotPasswordViewModel 
          return (T) new ForgotPasswordViewModel(singletonCImpl.provideAuthRepositoryProvider.get());

          case 8: // org.codeforegypt.quickassestant.ui.fragments.auth.LogInViewModel 
          return (T) new LogInViewModel(singletonCImpl.provideAuthRepositoryProvider.get());

          case 9: // org.codeforegypt.quickassestant.ui.fragments.more.MoreViewModel 
          return (T) new MoreViewModel(singletonCImpl.provideDaoProvider.get());

          case 10: // org.codeforegypt.quickassestant.ui.fragments.emergencies.myemergency.MyEmergencyViewModel 
          return (T) new MyEmergencyViewModel(activityRetainedCImpl.provideRepoEmergencyProvider.get());

          case 11: // org.codeforegypt.quickassestant.ui.fragments.auth.SignUpViewModel 
          return (T) new SignUpViewModel(singletonCImpl.provideAuthRepositoryProvider.get());

          case 12: // org.codeforegypt.quickassestant.ui.fragments.profile.UserProfileViewModel 
          return (T) new UserProfileViewModel(activityRetainedCImpl.provideProfileRepoProvider.get());

          default: throw new AssertionError(id);
        }
      }
    }
  }

  private static final class ActivityRetainedCImpl extends EmergencyApp_HiltComponents.ActivityRetainedC {
    private final SingletonCImpl singletonCImpl;

    private final ActivityRetainedCImpl activityRetainedCImpl = this;

    private Provider<ActivityRetainedLifecycle> provideActivityRetainedLifecycleProvider;

    private Provider<EmergencyApi> provideEmergencyApiProvider;

    private Provider<IEmergencyRepo> provideRepoEmergencyProvider;

    private Provider<ArticlesApi> provideArticleApiProvider;

    private Provider<ArticleDao> provideArticleDaoProvider;

    private Provider<IArticleRepo> provideArticleRepoProvider;

    private Provider<ContactsApi> provideArticleApiProvider2;

    private Provider<ContactDao> provideContactDaoProvider;

    private Provider<IContactRepo> provideContactsRepositoryProvider;

    private Provider<ProfileApi> provideProfileApiProvider;

    private Provider<IProfileRepo> provideProfileRepoProvider;

    private ActivityRetainedCImpl(SingletonCImpl singletonCImpl,
        SavedStateHandleHolder savedStateHandleHolderParam) {
      this.singletonCImpl = singletonCImpl;

      initialize(savedStateHandleHolderParam);

    }

    @SuppressWarnings("unchecked")
    private void initialize(final SavedStateHandleHolder savedStateHandleHolderParam) {
      this.provideActivityRetainedLifecycleProvider = DoubleCheck.provider(new SwitchingProvider<ActivityRetainedLifecycle>(singletonCImpl, activityRetainedCImpl, 0));
      this.provideEmergencyApiProvider = DoubleCheck.provider(new SwitchingProvider<EmergencyApi>(singletonCImpl, activityRetainedCImpl, 2));
      this.provideRepoEmergencyProvider = DoubleCheck.provider(new SwitchingProvider<IEmergencyRepo>(singletonCImpl, activityRetainedCImpl, 1));
      this.provideArticleApiProvider = DoubleCheck.provider(new SwitchingProvider<ArticlesApi>(singletonCImpl, activityRetainedCImpl, 4));
      this.provideArticleDaoProvider = DoubleCheck.provider(new SwitchingProvider<ArticleDao>(singletonCImpl, activityRetainedCImpl, 5));
      this.provideArticleRepoProvider = DoubleCheck.provider(new SwitchingProvider<IArticleRepo>(singletonCImpl, activityRetainedCImpl, 3));
      this.provideArticleApiProvider2 = DoubleCheck.provider(new SwitchingProvider<ContactsApi>(singletonCImpl, activityRetainedCImpl, 7));
      this.provideContactDaoProvider = DoubleCheck.provider(new SwitchingProvider<ContactDao>(singletonCImpl, activityRetainedCImpl, 8));
      this.provideContactsRepositoryProvider = DoubleCheck.provider(new SwitchingProvider<IContactRepo>(singletonCImpl, activityRetainedCImpl, 6));
      this.provideProfileApiProvider = DoubleCheck.provider(new SwitchingProvider<ProfileApi>(singletonCImpl, activityRetainedCImpl, 10));
      this.provideProfileRepoProvider = DoubleCheck.provider(new SwitchingProvider<IProfileRepo>(singletonCImpl, activityRetainedCImpl, 9));
    }

    @Override
    public ActivityComponentBuilder activityComponentBuilder() {
      return new ActivityCBuilder(singletonCImpl, activityRetainedCImpl);
    }

    @Override
    public ActivityRetainedLifecycle getActivityRetainedLifecycle() {
      return provideActivityRetainedLifecycleProvider.get();
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final ActivityRetainedCImpl activityRetainedCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, ActivityRetainedCImpl activityRetainedCImpl,
          int id) {
        this.singletonCImpl = singletonCImpl;
        this.activityRetainedCImpl = activityRetainedCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // dagger.hilt.android.ActivityRetainedLifecycle 
          return (T) ActivityRetainedComponentManager_LifecycleModule_ProvideActivityRetainedLifecycleFactory.provideActivityRetainedLifecycle();

          case 1: // org.codeforegypt.quickassestant.domain.repository.IEmergencyRepo 
          return (T) EmergencyModule_ProvideRepoEmergencyFactory.provideRepoEmergency(activityRetainedCImpl.provideEmergencyApiProvider.get(), singletonCImpl.provideDaoProvider.get());

          case 2: // org.codeforegypt.quickassestant.api.EmergencyApi 
          return (T) EmergencyModule_ProvideEmergencyApiFactory.provideEmergencyApi(singletonCImpl.provideRetrofitInstanceProvider.get());

          case 3: // org.codeforegypt.quickassestant.domain.repository.IArticleRepo 
          return (T) ArticleModule_ProvideArticleRepoFactory.provideArticleRepo(activityRetainedCImpl.provideArticleApiProvider.get(), activityRetainedCImpl.provideArticleDaoProvider.get());

          case 4: // org.codeforegypt.quickassestant.api.ArticlesApi 
          return (T) ArticleModule_ProvideArticleApiFactory.provideArticleApi(singletonCImpl.provideRetrofitInstanceProvider.get());

          case 5: // org.codeforegypt.quickassestant.data.db.ArticleDao 
          return (T) ArticleModule_ProvideArticleDaoFactory.provideArticleDao(singletonCImpl.provideUserDatabaseProvider.get());

          case 6: // org.codeforegypt.quickassestant.domain.repository.IContactRepo 
          return (T) ContactModule_ProvideContactsRepositoryFactory.provideContactsRepository(activityRetainedCImpl.provideArticleApiProvider2.get(), singletonCImpl.provideDaoProvider.get(), activityRetainedCImpl.provideContactDaoProvider.get());

          case 7: // org.codeforegypt.quickassestant.api.ContactsApi 
          return (T) ContactModule_ProvideArticleApiFactory.provideArticleApi(singletonCImpl.provideRetrofitInstanceProvider.get());

          case 8: // org.codeforegypt.quickassestant.data.db.ContactDao 
          return (T) ContactModule_ProvideContactDaoFactory.provideContactDao(singletonCImpl.provideUserDatabaseProvider.get());

          case 9: // org.codeforegypt.quickassestant.domain.repository.IProfileRepo 
          return (T) ProfileModule_ProvideProfileRepoFactory.provideProfileRepo(singletonCImpl.provideDaoProvider.get(), activityRetainedCImpl.provideProfileApiProvider.get());

          case 10: // org.codeforegypt.quickassestant.api.ProfileApi 
          return (T) ProfileModule_ProvideProfileApiFactory.provideProfileApi(singletonCImpl.provideRetrofitInstanceProvider.get());

          default: throw new AssertionError(id);
        }
      }
    }
  }

  private static final class ServiceCImpl extends EmergencyApp_HiltComponents.ServiceC {
    private final SingletonCImpl singletonCImpl;

    private final ServiceCImpl serviceCImpl = this;

    private ServiceCImpl(SingletonCImpl singletonCImpl, Service serviceParam) {
      this.singletonCImpl = singletonCImpl;


    }
  }

  private static final class SingletonCImpl extends EmergencyApp_HiltComponents.SingletonC {
    private final ApplicationContextModule applicationContextModule;

    private final SingletonCImpl singletonCImpl = this;

    private Provider<HttpLoggingInterceptor> provideLoggingInterceptorProvider;

    private Provider<OkHttpClient> provideOkHttpProvider;

    private Provider<Retrofit> provideRetrofitInstanceProvider;

    private Provider<UserDatabase> provideUserDatabaseProvider;

    private Provider<UserDao> provideDaoProvider;

    private Provider<SimpleApi> provideSimpleApiProvider;

    private Provider<IAuthRepository> provideAuthRepositoryProvider;

    private SingletonCImpl(ApplicationContextModule applicationContextModuleParam) {
      this.applicationContextModule = applicationContextModuleParam;
      initialize(applicationContextModuleParam);

    }

    @SuppressWarnings("unchecked")
    private void initialize(final ApplicationContextModule applicationContextModuleParam) {
      this.provideLoggingInterceptorProvider = DoubleCheck.provider(new SwitchingProvider<HttpLoggingInterceptor>(singletonCImpl, 2));
      this.provideOkHttpProvider = DoubleCheck.provider(new SwitchingProvider<OkHttpClient>(singletonCImpl, 1));
      this.provideRetrofitInstanceProvider = DoubleCheck.provider(new SwitchingProvider<Retrofit>(singletonCImpl, 0));
      this.provideUserDatabaseProvider = DoubleCheck.provider(new SwitchingProvider<UserDatabase>(singletonCImpl, 4));
      this.provideDaoProvider = DoubleCheck.provider(new SwitchingProvider<UserDao>(singletonCImpl, 3));
      this.provideSimpleApiProvider = DoubleCheck.provider(new SwitchingProvider<SimpleApi>(singletonCImpl, 6));
      this.provideAuthRepositoryProvider = DoubleCheck.provider(new SwitchingProvider<IAuthRepository>(singletonCImpl, 5));
    }

    @Override
    public Set<Boolean> getDisableFragmentGetContextFix() {
      return ImmutableSet.<Boolean>of();
    }

    @Override
    public ActivityRetainedComponentBuilder retainedComponentBuilder() {
      return new ActivityRetainedCBuilder(singletonCImpl);
    }

    @Override
    public ServiceComponentBuilder serviceComponentBuilder() {
      return new ServiceCBuilder(singletonCImpl);
    }

    @Override
    public void injectEmergencyApp(EmergencyApp emergencyApp) {
    }

    private static final class SwitchingProvider<T> implements Provider<T> {
      private final SingletonCImpl singletonCImpl;

      private final int id;

      SwitchingProvider(SingletonCImpl singletonCImpl, int id) {
        this.singletonCImpl = singletonCImpl;
        this.id = id;
      }

      @SuppressWarnings("unchecked")
      @Override
      public T get() {
        switch (id) {
          case 0: // retrofit2.Retrofit 
          return (T) AppModule_ProvideRetrofitInstanceFactory.provideRetrofitInstance(singletonCImpl.provideOkHttpProvider.get());

          case 1: // okhttp3.OkHttpClient 
          return (T) AppModule_ProvideOkHttpFactory.provideOkHttp(singletonCImpl.provideLoggingInterceptorProvider.get());

          case 2: // okhttp3.logging.HttpLoggingInterceptor 
          return (T) AppModule_ProvideLoggingInterceptorFactory.provideLoggingInterceptor();

          case 3: // org.codeforegypt.quickassestant.data.db.UserDao 
          return (T) AppModule_ProvideDaoFactory.provideDao(singletonCImpl.provideUserDatabaseProvider.get());

          case 4: // org.codeforegypt.quickassestant.data.db.UserDatabase 
          return (T) AppModule_ProvideUserDatabaseFactory.provideUserDatabase(ApplicationContextModule_ProvideContextFactory.provideContext(singletonCImpl.applicationContextModule));

          case 5: // org.codeforegypt.quickassestant.domain.repository.IAuthRepository 
          return (T) AppModule_ProvideAuthRepositoryFactory.provideAuthRepository(singletonCImpl.provideSimpleApiProvider.get(), singletonCImpl.provideDaoProvider.get());

          case 6: // org.codeforegypt.quickassestant.api.SimpleApi 
          return (T) AppModule_ProvideSimpleApiFactory.provideSimpleApi(singletonCImpl.provideRetrofitInstanceProvider.get());

          default: throw new AssertionError(id);
        }
      }
    }
  }
}

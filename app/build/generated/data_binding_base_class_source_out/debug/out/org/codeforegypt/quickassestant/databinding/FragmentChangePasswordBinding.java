// Generated by view binder compiler. Do not edit!
package org.codeforegypt.quickassestant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.codeforegypt.quickassestant.R;

public final class FragmentChangePasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnChangePass;

  @NonNull
  public final EditText etCurrentPass;

  @NonNull
  public final EditText etNewPassword;

  @NonNull
  public final EditText etReturnChangePass;

  @NonNull
  public final ImageView ivChangePasswordReturn;

  private FragmentChangePasswordBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnChangePass, @NonNull EditText etCurrentPass,
      @NonNull EditText etNewPassword, @NonNull EditText etReturnChangePass,
      @NonNull ImageView ivChangePasswordReturn) {
    this.rootView = rootView;
    this.btnChangePass = btnChangePass;
    this.etCurrentPass = etCurrentPass;
    this.etNewPassword = etNewPassword;
    this.etReturnChangePass = etReturnChangePass;
    this.ivChangePasswordReturn = ivChangePasswordReturn;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnChangePass;
      Button btnChangePass = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePass == null) {
        break missingId;
      }

      id = R.id.etCurrentPass;
      EditText etCurrentPass = ViewBindings.findChildViewById(rootView, id);
      if (etCurrentPass == null) {
        break missingId;
      }

      id = R.id.etNewPassword;
      EditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.etReturnChangePass;
      EditText etReturnChangePass = ViewBindings.findChildViewById(rootView, id);
      if (etReturnChangePass == null) {
        break missingId;
      }

      id = R.id.ivChangePasswordReturn;
      ImageView ivChangePasswordReturn = ViewBindings.findChildViewById(rootView, id);
      if (ivChangePasswordReturn == null) {
        break missingId;
      }

      return new FragmentChangePasswordBinding((LinearLayout) rootView, btnChangePass,
          etCurrentPass, etNewPassword, etReturnChangePass, ivChangePasswordReturn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

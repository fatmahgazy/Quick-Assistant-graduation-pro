// Generated by Dagger (https://dagger.dev).
package org.codeforegypt.quickassestant.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.codeforegypt.quickassestant.data.db.UserDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideUserDatabaseFactory implements Factory<UserDatabase> {
  private final Provider<Context> appProvider;

  public AppModule_ProvideUserDatabaseFactory(Provider<Context> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public UserDatabase get() {
    return provideUserDatabase(appProvider.get());
  }

  public static AppModule_ProvideUserDatabaseFactory create(Provider<Context> appProvider) {
    return new AppModule_ProvideUserDatabaseFactory(appProvider);
  }

  public static UserDatabase provideUserDatabase(Context app) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideUserDatabase(app));
  }
}

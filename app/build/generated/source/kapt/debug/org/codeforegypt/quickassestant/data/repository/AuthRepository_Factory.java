// Generated by Dagger (https://dagger.dev).
package org.codeforegypt.quickassestant.data.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import org.codeforegypt.quickassestant.api.SimpleApi;
import org.codeforegypt.quickassestant.data.db.UserDao;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AuthRepository_Factory implements Factory<AuthRepository> {
  private final Provider<SimpleApi> simpleApiProvider;

  private final Provider<UserDao> userDaoProvider;

  public AuthRepository_Factory(Provider<SimpleApi> simpleApiProvider,
      Provider<UserDao> userDaoProvider) {
    this.simpleApiProvider = simpleApiProvider;
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public AuthRepository get() {
    return newInstance(simpleApiProvider.get(), userDaoProvider.get());
  }

  public static AuthRepository_Factory create(Provider<SimpleApi> simpleApiProvider,
      Provider<UserDao> userDaoProvider) {
    return new AuthRepository_Factory(simpleApiProvider, userDaoProvider);
  }

  public static AuthRepository newInstance(SimpleApi simpleApi, UserDao userDao) {
    return new AuthRepository(simpleApi, userDao);
  }
}
